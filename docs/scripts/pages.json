[{"name":"B","description":"pieces.Color.B","location":"-k-c-l--chess/pieces/-color/-b/index.html","searchKeys":["B","B","pieces.Color.B"]},{"name":"BISHOP","description":"pieces.PieceType.BISHOP","location":"-k-c-l--chess/pieces/-piece-type/-b-i-s-h-o-p/index.html","searchKeys":["BISHOP","BISHOP","pieces.PieceType.BISHOP"]},{"name":"E","description":"pieces.Color.E","location":"-k-c-l--chess/pieces/-color/-e/index.html","searchKeys":["E","E","pieces.Color.E"]},{"name":"EMPTY","description":"pieces.PieceType.EMPTY","location":"-k-c-l--chess/pieces/-piece-type/-e-m-p-t-y/index.html","searchKeys":["EMPTY","EMPTY","pieces.PieceType.EMPTY"]},{"name":"KING","description":"pieces.PieceType.KING","location":"-k-c-l--chess/pieces/-piece-type/-k-i-n-g/index.html","searchKeys":["KING","KING","pieces.PieceType.KING"]},{"name":"KNIGHT","description":"pieces.PieceType.KNIGHT","location":"-k-c-l--chess/pieces/-piece-type/-k-n-i-g-h-t/index.html","searchKeys":["KNIGHT","KNIGHT","pieces.PieceType.KNIGHT"]},{"name":"PAWN","description":"pieces.PieceType.PAWN","location":"-k-c-l--chess/pieces/-piece-type/-p-a-w-n/index.html","searchKeys":["PAWN","PAWN","pieces.PieceType.PAWN"]},{"name":"QUEEN","description":"pieces.PieceType.QUEEN","location":"-k-c-l--chess/pieces/-piece-type/-q-u-e-e-n/index.html","searchKeys":["QUEEN","QUEEN","pieces.PieceType.QUEEN"]},{"name":"ROOK","description":"pieces.PieceType.ROOK","location":"-k-c-l--chess/pieces/-piece-type/-r-o-o-k/index.html","searchKeys":["ROOK","ROOK","pieces.PieceType.ROOK"]},{"name":"W","description":"pieces.Color.W","location":"-k-c-l--chess/pieces/-color/-w/index.html","searchKeys":["W","W","pieces.Color.W"]},{"name":"abstract class ChessPiece(color: Color, pieceType: PieceType, directions: List<Location>)","description":"pieces.ChessPiece","location":"-k-c-l--chess/pieces/-chess-piece/index.html","searchKeys":["ChessPiece","abstract class ChessPiece(color: Color, pieceType: PieceType, directions: List<Location>)","pieces.ChessPiece"]},{"name":"abstract fun print(): String","description":"pieces.ChessPiece.print","location":"-k-c-l--chess/pieces/-chess-piece/print.html","searchKeys":["print","abstract fun print(): String","pieces.ChessPiece.print"]},{"name":"class Bishop(color: Color) : ChessPiece","description":"pieces.Bishop","location":"-k-c-l--chess/pieces/-bishop/index.html","searchKeys":["Bishop","class Bishop(color: Color) : ChessPiece","pieces.Bishop"]},{"name":"class ChessBoard","description":"game_helpers.ChessBoard","location":"-k-c-l--chess/game_helpers/-chess-board/index.html","searchKeys":["ChessBoard","class ChessBoard","game_helpers.ChessBoard"]},{"name":"class ChessMove","description":"game_helpers.ChessMove","location":"-k-c-l--chess/game_helpers/-chess-move/index.html","searchKeys":["ChessMove","class ChessMove","game_helpers.ChessMove"]},{"name":"class EmptySpot : ChessPiece","description":"pieces.EmptySpot","location":"-k-c-l--chess/pieces/-empty-spot/index.html","searchKeys":["EmptySpot","class EmptySpot : ChessPiece","pieces.EmptySpot"]},{"name":"class GameLogic(chessBoard: ChessBoard)","description":"game_helpers.GameLogic","location":"-k-c-l--chess/game_helpers/-game-logic/index.html","searchKeys":["GameLogic","class GameLogic(chessBoard: ChessBoard)","game_helpers.GameLogic"]},{"name":"class King(color: Color) : ChessPiece","description":"pieces.King","location":"-k-c-l--chess/pieces/-king/index.html","searchKeys":["King","class King(color: Color) : ChessPiece","pieces.King"]},{"name":"class Knight(color: Color) : ChessPiece","description":"pieces.Knight","location":"-k-c-l--chess/pieces/-knight/index.html","searchKeys":["Knight","class Knight(color: Color) : ChessPiece","pieces.Knight"]},{"name":"class Location(row: Int, col: Int)","description":"game_helpers.Location","location":"-k-c-l--chess/game_helpers/-location/index.html","searchKeys":["Location","class Location(row: Int, col: Int)","game_helpers.Location"]},{"name":"class Logger(name: String)","description":"run.Logger","location":"-k-c-l--chess/run/-logger/index.html","searchKeys":["Logger","class Logger(name: String)","run.Logger"]},{"name":"class Pawn(color: Color, var canBeEnPassant: Boolean = false) : ChessPiece","description":"pieces.Pawn","location":"-k-c-l--chess/pieces/-pawn/index.html","searchKeys":["Pawn","class Pawn(color: Color, var canBeEnPassant: Boolean = false) : ChessPiece","pieces.Pawn"]},{"name":"class Queen(color: Color) : ChessPiece","description":"pieces.Queen","location":"-k-c-l--chess/pieces/-queen/index.html","searchKeys":["Queen","class Queen(color: Color) : ChessPiece","pieces.Queen"]},{"name":"class Rook(color: Color) : ChessPiece","description":"pieces.Rook","location":"-k-c-l--chess/pieces/-rook/index.html","searchKeys":["Rook","class Rook(color: Color) : ChessPiece","pieces.Rook"]},{"name":"class Run","description":"run.Run","location":"-k-c-l--chess/run/-run/index.html","searchKeys":["Run","class Run","run.Run"]},{"name":"class Turn(p1Turn: Boolean = true)","description":"game_helpers.Turn","location":"-k-c-l--chess/game_helpers/-turn/index.html","searchKeys":["Turn","class Turn(p1Turn: Boolean = true)","game_helpers.Turn"]},{"name":"const val COL_END: Int = 7","description":"game_helpers.ChessBoard.Companion.COL_END","location":"-k-c-l--chess/game_helpers/-chess-board/-companion/-c-o-l_-e-n-d.html","searchKeys":["COL_END","const val COL_END: Int = 7","game_helpers.ChessBoard.Companion.COL_END"]},{"name":"const val COL_START: Int = 0","description":"game_helpers.ChessBoard.Companion.COL_START","location":"-k-c-l--chess/game_helpers/-chess-board/-companion/-c-o-l_-s-t-a-r-t.html","searchKeys":["COL_START","const val COL_START: Int = 0","game_helpers.ChessBoard.Companion.COL_START"]},{"name":"const val ROW_END: Int = 7","description":"game_helpers.ChessBoard.Companion.ROW_END","location":"-k-c-l--chess/game_helpers/-chess-board/-companion/-r-o-w_-e-n-d.html","searchKeys":["ROW_END","const val ROW_END: Int = 7","game_helpers.ChessBoard.Companion.ROW_END"]},{"name":"const val ROW_START: Int = 0","description":"game_helpers.ChessBoard.Companion.ROW_START","location":"-k-c-l--chess/game_helpers/-chess-board/-companion/-r-o-w_-s-t-a-r-t.html","searchKeys":["ROW_START","const val ROW_START: Int = 0","game_helpers.ChessBoard.Companion.ROW_START"]},{"name":"enum Color : Enum<Color> ","description":"pieces.Color","location":"-k-c-l--chess/pieces/-color/index.html","searchKeys":["Color","enum Color : Enum<Color> ","pieces.Color"]},{"name":"enum PieceType : Enum<PieceType> ","description":"pieces.PieceType","location":"-k-c-l--chess/pieces/-piece-type/index.html","searchKeys":["PieceType","enum PieceType : Enum<PieceType> ","pieces.PieceType"]},{"name":"fun Bishop(color: Color)","description":"pieces.Bishop.Bishop","location":"-k-c-l--chess/pieces/-bishop/-bishop.html","searchKeys":["Bishop","fun Bishop(color: Color)","pieces.Bishop.Bishop"]},{"name":"fun ChessBoard()","description":"game_helpers.ChessBoard.ChessBoard","location":"-k-c-l--chess/game_helpers/-chess-board/-chess-board.html","searchKeys":["ChessBoard","fun ChessBoard()","game_helpers.ChessBoard.ChessBoard"]},{"name":"fun ChessMove(input: String)","description":"game_helpers.ChessMove.ChessMove","location":"-k-c-l--chess/game_helpers/-chess-move/-chess-move.html","searchKeys":["ChessMove","fun ChessMove(input: String)","game_helpers.ChessMove.ChessMove"]},{"name":"fun ChessMove(start: Location, end: Location)","description":"game_helpers.ChessMove.ChessMove","location":"-k-c-l--chess/game_helpers/-chess-move/-chess-move.html","searchKeys":["ChessMove","fun ChessMove(start: Location, end: Location)","game_helpers.ChessMove.ChessMove"]},{"name":"fun ChessPiece(color: Color, pieceType: PieceType, directions: List<Location>)","description":"pieces.ChessPiece.ChessPiece","location":"-k-c-l--chess/pieces/-chess-piece/-chess-piece.html","searchKeys":["ChessPiece","fun ChessPiece(color: Color, pieceType: PieceType, directions: List<Location>)","pieces.ChessPiece.ChessPiece"]},{"name":"fun EmptySpot()","description":"pieces.EmptySpot.EmptySpot","location":"-k-c-l--chess/pieces/-empty-spot/-empty-spot.html","searchKeys":["EmptySpot","fun EmptySpot()","pieces.EmptySpot.EmptySpot"]},{"name":"fun GameLogic(chessBoard: ChessBoard)","description":"game_helpers.GameLogic.GameLogic","location":"-k-c-l--chess/game_helpers/-game-logic/-game-logic.html","searchKeys":["GameLogic","fun GameLogic(chessBoard: ChessBoard)","game_helpers.GameLogic.GameLogic"]},{"name":"fun King(color: Color)","description":"pieces.King.King","location":"-k-c-l--chess/pieces/-king/-king.html","searchKeys":["King","fun King(color: Color)","pieces.King.King"]},{"name":"fun Knight(color: Color)","description":"pieces.Knight.Knight","location":"-k-c-l--chess/pieces/-knight/-knight.html","searchKeys":["Knight","fun Knight(color: Color)","pieces.Knight.Knight"]},{"name":"fun Location(row: Int, col: Int)","description":"game_helpers.Location.Location","location":"-k-c-l--chess/game_helpers/-location/-location.html","searchKeys":["Location","fun Location(row: Int, col: Int)","game_helpers.Location.Location"]},{"name":"fun Logger(name: String)","description":"run.Logger.Logger","location":"-k-c-l--chess/run/-logger/-logger.html","searchKeys":["Logger","fun Logger(name: String)","run.Logger.Logger"]},{"name":"fun Pawn(color: Color, canBeEnPassant: Boolean = false)","description":"pieces.Pawn.Pawn","location":"-k-c-l--chess/pieces/-pawn/-pawn.html","searchKeys":["Pawn","fun Pawn(color: Color, canBeEnPassant: Boolean = false)","pieces.Pawn.Pawn"]},{"name":"fun Queen(color: Color)","description":"pieces.Queen.Queen","location":"-k-c-l--chess/pieces/-queen/-queen.html","searchKeys":["Queen","fun Queen(color: Color)","pieces.Queen.Queen"]},{"name":"fun Rook(color: Color)","description":"pieces.Rook.Rook","location":"-k-c-l--chess/pieces/-rook/-rook.html","searchKeys":["Rook","fun Rook(color: Color)","pieces.Rook.Rook"]},{"name":"fun Run()","description":"run.Run.Run","location":"-k-c-l--chess/run/-run/-run.html","searchKeys":["Run","fun Run()","run.Run.Run"]},{"name":"fun Turn(p1Turn: Boolean = true)","description":"game_helpers.Turn.Turn","location":"-k-c-l--chess/game_helpers/-turn/-turn.html","searchKeys":["Turn","fun Turn(p1Turn: Boolean = true)","game_helpers.Turn.Turn"]},{"name":"fun additiveMovement(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","description":"pieces.ChessPiece.additiveMovement","location":"-k-c-l--chess/pieces/-chess-piece/additive-movement.html","searchKeys":["additiveMovement","fun additiveMovement(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","pieces.ChessPiece.additiveMovement"]},{"name":"fun allLocations(turn: Turn): Set<Location>","description":"game_helpers.GameLogic.allLocations","location":"-k-c-l--chess/game_helpers/-game-logic/all-locations.html","searchKeys":["allLocations","fun allLocations(turn: Turn): Set<Location>","game_helpers.GameLogic.allLocations"]},{"name":"fun bye()","description":"run.Run.bye","location":"-k-c-l--chess/run/-run/bye.html","searchKeys":["bye","fun bye()","run.Run.bye"]},{"name":"fun canPromote(chessMove: ChessMove, turn: Turn): Boolean","description":"pieces.ChessPiece.canPromote","location":"-k-c-l--chess/pieces/-chess-piece/can-promote.html","searchKeys":["canPromote","fun canPromote(chessMove: ChessMove, turn: Turn): Boolean","pieces.ChessPiece.canPromote"]},{"name":"fun castle(turn: Turn, kingside: Boolean)","description":"game_helpers.GameLogic.castle","location":"-k-c-l--chess/game_helpers/-game-logic/castle.html","searchKeys":["castle","fun castle(turn: Turn, kingside: Boolean)","game_helpers.GameLogic.castle"]},{"name":"fun check(turn: Turn): Boolean","description":"game_helpers.GameLogic.check","location":"-k-c-l--chess/game_helpers/-game-logic/check.html","searchKeys":["check","fun check(turn: Turn): Boolean","game_helpers.GameLogic.check"]},{"name":"fun checkKnightMovement(kingLocation: Location, turn: Turn, enemyTurn: Turn): Set<ChessMove>","description":"game_helpers.GameLogic.checkKnightMovement","location":"-k-c-l--chess/game_helpers/-game-logic/check-knight-movement.html","searchKeys":["checkKnightMovement","fun checkKnightMovement(kingLocation: Location, turn: Turn, enemyTurn: Turn): Set<ChessMove>","game_helpers.GameLogic.checkKnightMovement"]},{"name":"fun checkLineOfSight(kingLocation: Location, turn: Turn, enemyTurn: Turn): Set<ChessMove>","description":"game_helpers.GameLogic.checkLineOfSight","location":"-k-c-l--chess/game_helpers/-game-logic/check-line-of-sight.html","searchKeys":["checkLineOfSight","fun checkLineOfSight(kingLocation: Location, turn: Turn, enemyTurn: Turn): Set<ChessMove>","game_helpers.GameLogic.checkLineOfSight"]},{"name":"fun colorToString(): String","description":"game_helpers.Turn.colorToString","location":"-k-c-l--chess/game_helpers/-turn/color-to-string.html","searchKeys":["colorToString","fun colorToString(): String","game_helpers.Turn.colorToString"]},{"name":"fun column(): Int","description":"game_helpers.Location.column","location":"-k-c-l--chess/game_helpers/-location/column.html","searchKeys":["column","fun column(): Int","game_helpers.Location.column"]},{"name":"fun convertLocation(input: Location): Pair<Char, Char>","description":"run.Logger.Companion.convertLocation","location":"-k-c-l--chess/run/-logger/-companion/convert-location.html","searchKeys":["convertLocation","fun convertLocation(input: Location): Pair<Char, Char>","run.Logger.Companion.convertLocation"]},{"name":"fun convertSetOfLocations(input: Set<Location>): Set<Pair<Char, Char>>","description":"run.Logger.Companion.convertSetOfLocations","location":"-k-c-l--chess/run/-logger/-companion/convert-set-of-locations.html","searchKeys":["convertSetOfLocations","fun convertSetOfLocations(input: Set<Location>): Set<Pair<Char, Char>>","run.Logger.Companion.convertSetOfLocations"]},{"name":"fun convertToPiece(input: String, turn: Turn): ChessPiece","description":"pieces.ChessPiece.convertToPiece","location":"-k-c-l--chess/pieces/-chess-piece/convert-to-piece.html","searchKeys":["convertToPiece","fun convertToPiece(input: String, turn: Turn): ChessPiece","pieces.ChessPiece.convertToPiece"]},{"name":"fun debug(message: String)","description":"run.Logger.debug","location":"-k-c-l--chess/run/-logger/debug.html","searchKeys":["debug","fun debug(message: String)","run.Logger.debug"]},{"name":"fun directions(): List<Location>","description":"pieces.Bishop.Companion.directions","location":"-k-c-l--chess/pieces/-bishop/-companion/directions.html","searchKeys":["directions","fun directions(): List<Location>","pieces.Bishop.Companion.directions"]},{"name":"fun directions(): List<Location>","description":"pieces.EmptySpot.Companion.directions","location":"-k-c-l--chess/pieces/-empty-spot/-companion/directions.html","searchKeys":["directions","fun directions(): List<Location>","pieces.EmptySpot.Companion.directions"]},{"name":"fun directions(): List<Location>","description":"pieces.King.Companion.directions","location":"-k-c-l--chess/pieces/-king/-companion/directions.html","searchKeys":["directions","fun directions(): List<Location>","pieces.King.Companion.directions"]},{"name":"fun directions(): List<Location>","description":"pieces.Knight.Companion.directions","location":"-k-c-l--chess/pieces/-knight/-companion/directions.html","searchKeys":["directions","fun directions(): List<Location>","pieces.Knight.Companion.directions"]},{"name":"fun directions(): List<Location>","description":"pieces.Pawn.Companion.directions","location":"-k-c-l--chess/pieces/-pawn/-companion/directions.html","searchKeys":["directions","fun directions(): List<Location>","pieces.Pawn.Companion.directions"]},{"name":"fun directions(): List<Location>","description":"pieces.Queen.Companion.directions","location":"-k-c-l--chess/pieces/-queen/-companion/directions.html","searchKeys":["directions","fun directions(): List<Location>","pieces.Queen.Companion.directions"]},{"name":"fun directions(): List<Location>","description":"pieces.Rook.Companion.directions","location":"-k-c-l--chess/pieces/-rook/-companion/directions.html","searchKeys":["directions","fun directions(): List<Location>","pieces.Rook.Companion.directions"]},{"name":"fun endLocation(): Location","description":"game_helpers.ChessMove.endLocation","location":"-k-c-l--chess/game_helpers/-chess-move/end-location.html","searchKeys":["endLocation","fun endLocation(): Location","game_helpers.ChessMove.endLocation"]},{"name":"fun enemyColor(): Color","description":"game_helpers.Turn.enemyColor","location":"-k-c-l--chess/game_helpers/-turn/enemy-color.html","searchKeys":["enemyColor","fun enemyColor(): Color","game_helpers.Turn.enemyColor"]},{"name":"fun exit(s: String?): Boolean","description":"run.Run.exit","location":"-k-c-l--chess/run/-run/exit.html","searchKeys":["exit","fun exit(s: String?): Boolean","run.Run.exit"]},{"name":"fun findMoves(location: Location, chessBoard: ChessBoard, turn: Turn): Set<ChessMove>","description":"game_helpers.GameLogic.findMoves","location":"-k-c-l--chess/game_helpers/-game-logic/find-moves.html","searchKeys":["findMoves","fun findMoves(location: Location, chessBoard: ChessBoard, turn: Turn): Set<ChessMove>","game_helpers.GameLogic.findMoves"]},{"name":"fun getAttackMoves(chessBoard: ChessBoard, turn: Turn, movement: Int, startLocation: Location): Set<Location>","description":"pieces.ChessPiece.getAttackMoves","location":"-k-c-l--chess/pieces/-chess-piece/get-attack-moves.html","searchKeys":["getAttackMoves","fun getAttackMoves(chessBoard: ChessBoard, turn: Turn, movement: Int, startLocation: Location): Set<Location>","pieces.ChessPiece.getAttackMoves"]},{"name":"fun getColor(): Color","description":"game_helpers.Turn.getColor","location":"-k-c-l--chess/game_helpers/-turn/get-color.html","searchKeys":["getColor","fun getColor(): Color","game_helpers.Turn.getColor"]},{"name":"fun getInput(): String","description":"pieces.ChessPiece.getInput","location":"-k-c-l--chess/pieces/-chess-piece/get-input.html","searchKeys":["getInput","fun getInput(): String","pieces.ChessPiece.getInput"]},{"name":"fun getInput(p1Turn: Boolean): String","description":"run.Run.getInput","location":"-k-c-l--chess/run/-run/get-input.html","searchKeys":["getInput","fun getInput(p1Turn: Boolean): String","run.Run.getInput"]},{"name":"fun getPiece(coordinates: Location): ChessPiece","description":"game_helpers.ChessBoard.getPiece","location":"-k-c-l--chess/game_helpers/-chess-board/get-piece.html","searchKeys":["getPiece","fun getPiece(coordinates: Location): ChessPiece","game_helpers.ChessBoard.getPiece"]},{"name":"fun getStraightMoves(chessBoard: ChessBoard, turn: Turn, movement: Int, startLocation: Location): Set<Location>","description":"pieces.ChessPiece.getStraightMoves","location":"-k-c-l--chess/pieces/-chess-piece/get-straight-moves.html","searchKeys":["getStraightMoves","fun getStraightMoves(chessBoard: ChessBoard, turn: Turn, movement: Int, startLocation: Location): Set<Location>","pieces.ChessPiece.getStraightMoves"]},{"name":"fun getTurn(): Boolean","description":"game_helpers.Turn.getTurn","location":"-k-c-l--chess/game_helpers/-turn/get-turn.html","searchKeys":["getTurn","fun getTurn(): Boolean","game_helpers.Turn.getTurn"]},{"name":"fun hasMoved(): Boolean","description":"pieces.ChessPiece.hasMoved","location":"-k-c-l--chess/pieces/-chess-piece/has-moved.html","searchKeys":["hasMoved","fun hasMoved(): Boolean","pieces.ChessPiece.hasMoved"]},{"name":"fun help()","description":"run.Run.help","location":"-k-c-l--chess/run/-run/help.html","searchKeys":["help","fun help()","run.Run.help"]},{"name":"fun initBishops()","description":"game_helpers.GameLogic.initBishops","location":"-k-c-l--chess/game_helpers/-game-logic/init-bishops.html","searchKeys":["initBishops","fun initBishops()","game_helpers.GameLogic.initBishops"]},{"name":"fun initChessPieces()","description":"game_helpers.GameLogic.initChessPieces","location":"-k-c-l--chess/game_helpers/-game-logic/init-chess-pieces.html","searchKeys":["initChessPieces","fun initChessPieces()","game_helpers.GameLogic.initChessPieces"]},{"name":"fun initKings()","description":"game_helpers.GameLogic.initKings","location":"-k-c-l--chess/game_helpers/-game-logic/init-kings.html","searchKeys":["initKings","fun initKings()","game_helpers.GameLogic.initKings"]},{"name":"fun initKnights()","description":"game_helpers.GameLogic.initKnights","location":"-k-c-l--chess/game_helpers/-game-logic/init-knights.html","searchKeys":["initKnights","fun initKnights()","game_helpers.GameLogic.initKnights"]},{"name":"fun initPawns()","description":"game_helpers.GameLogic.initPawns","location":"-k-c-l--chess/game_helpers/-game-logic/init-pawns.html","searchKeys":["initPawns","fun initPawns()","game_helpers.GameLogic.initPawns"]},{"name":"fun initQueens()","description":"game_helpers.GameLogic.initQueens","location":"-k-c-l--chess/game_helpers/-game-logic/init-queens.html","searchKeys":["initQueens","fun initQueens()","game_helpers.GameLogic.initQueens"]},{"name":"fun initRooks()","description":"game_helpers.GameLogic.initRooks","location":"-k-c-l--chess/game_helpers/-game-logic/init-rooks.html","searchKeys":["initRooks","fun initRooks()","game_helpers.GameLogic.initRooks"]},{"name":"fun isValid(): Boolean","description":"game_helpers.Location.isValid","location":"-k-c-l--chess/game_helpers/-location/is-valid.html","searchKeys":["isValid","fun isValid(): Boolean","game_helpers.Location.isValid"]},{"name":"fun kingsCastle(turn: Turn, kingside: Boolean): Boolean","description":"game_helpers.GameLogic.kingsCastle","location":"-k-c-l--chess/game_helpers/-game-logic/kings-castle.html","searchKeys":["kingsCastle","fun kingsCastle(turn: Turn, kingside: Boolean): Boolean","game_helpers.GameLogic.kingsCastle"]},{"name":"fun kingsLocation(turn: Turn): Location","description":"game_helpers.GameLogic.kingsLocation","location":"-k-c-l--chess/game_helpers/-game-logic/kings-location.html","searchKeys":["kingsLocation","fun kingsLocation(turn: Turn): Location","game_helpers.GameLogic.kingsLocation"]},{"name":"fun legalMoves(turn: Turn): Boolean","description":"game_helpers.GameLogic.legalMoves","location":"-k-c-l--chess/game_helpers/-game-logic/legal-moves.html","searchKeys":["legalMoves","fun legalMoves(turn: Turn): Boolean","game_helpers.GameLogic.legalMoves"]},{"name":"fun main(args: Array<String>)","description":"run.Run.Companion.main","location":"-k-c-l--chess/run/-run/-companion/main.html","searchKeys":["main","fun main(args: Array<String>)","run.Run.Companion.main"]},{"name":"fun move(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","description":"pieces.ChessPiece.move","location":"-k-c-l--chess/pieces/-chess-piece/move.html","searchKeys":["move","fun move(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","pieces.ChessPiece.move"]},{"name":"fun nextTurn()","description":"game_helpers.Turn.nextTurn","location":"-k-c-l--chess/game_helpers/-turn/next-turn.html","searchKeys":["nextTurn","fun nextTurn()","game_helpers.Turn.nextTurn"]},{"name":"fun notPawnMove(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","description":"pieces.ChessPiece.notPawnMove","location":"-k-c-l--chess/pieces/-chess-piece/not-pawn-move.html","searchKeys":["notPawnMove","fun notPawnMove(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","pieces.ChessPiece.notPawnMove"]},{"name":"fun pawnMove(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","description":"pieces.ChessPiece.pawnMove","location":"-k-c-l--chess/pieces/-chess-piece/pawn-move.html","searchKeys":["pawnMove","fun pawnMove(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","pieces.ChessPiece.pawnMove"]},{"name":"fun pawnMovement(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","description":"pieces.ChessPiece.pawnMovement","location":"-k-c-l--chess/pieces/-chess-piece/pawn-movement.html","searchKeys":["pawnMovement","fun pawnMovement(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","pieces.ChessPiece.pawnMovement"]},{"name":"fun pieceBetween(kingLocation: Location, rooksLocation: Location): Boolean","description":"game_helpers.GameLogic.pieceBetween","location":"-k-c-l--chess/game_helpers/-game-logic/piece-between.html","searchKeys":["pieceBetween","fun pieceBetween(kingLocation: Location, rooksLocation: Location): Boolean","game_helpers.GameLogic.pieceBetween"]},{"name":"fun possibleMoves(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","description":"pieces.ChessPiece.possibleMoves","location":"-k-c-l--chess/pieces/-chess-piece/possible-moves.html","searchKeys":["possibleMoves","fun possibleMoves(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","pieces.ChessPiece.possibleMoves"]},{"name":"fun queensCastle(turn: Turn, kingside: Boolean): Boolean","description":"game_helpers.GameLogic.queensCastle","location":"-k-c-l--chess/game_helpers/-game-logic/queens-castle.html","searchKeys":["queensCastle","fun queensCastle(turn: Turn, kingside: Boolean): Boolean","game_helpers.GameLogic.queensCastle"]},{"name":"fun render()","description":"game_helpers.ChessBoard.render","location":"-k-c-l--chess/game_helpers/-chess-board/render.html","searchKeys":["render","fun render()","game_helpers.ChessBoard.render"]},{"name":"fun row(): Int","description":"game_helpers.Location.row","location":"-k-c-l--chess/game_helpers/-location/row.html","searchKeys":["row","fun row(): Int","game_helpers.Location.row"]},{"name":"fun runGame()","description":"run.Run.runGame","location":"-k-c-l--chess/run/-run/run-game.html","searchKeys":["runGame","fun runGame()","run.Run.runGame"]},{"name":"fun setPiece(location: Location, piece: ChessPiece)","description":"game_helpers.ChessBoard.setPiece","location":"-k-c-l--chess/game_helpers/-chess-board/set-piece.html","searchKeys":["setPiece","fun setPiece(location: Location, piece: ChessPiece)","game_helpers.ChessBoard.setPiece"]},{"name":"fun sourceCoordinateVerifier(chessMove: ChessMove, turn: Turn): Boolean","description":"game_helpers.GameLogic.sourceCoordinateVerifier","location":"-k-c-l--chess/game_helpers/-game-logic/source-coordinate-verifier.html","searchKeys":["sourceCoordinateVerifier","fun sourceCoordinateVerifier(chessMove: ChessMove, turn: Turn): Boolean","game_helpers.GameLogic.sourceCoordinateVerifier"]},{"name":"fun startGame()","description":"game_helpers.GameLogic.startGame","location":"-k-c-l--chess/game_helpers/-game-logic/start-game.html","searchKeys":["startGame","fun startGame()","game_helpers.GameLogic.startGame"]},{"name":"fun startLocation(): Location","description":"game_helpers.ChessMove.startLocation","location":"-k-c-l--chess/game_helpers/-chess-move/start-location.html","searchKeys":["startLocation","fun startLocation(): Location","game_helpers.ChessMove.startLocation"]},{"name":"fun staticMovement(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","description":"pieces.ChessPiece.staticMovement","location":"-k-c-l--chess/pieces/-chess-piece/static-movement.html","searchKeys":["staticMovement","fun staticMovement(startLocation: Location, chessBoard: ChessBoard, turn: Turn): Set<Location>","pieces.ChessPiece.staticMovement"]},{"name":"fun tmpMove(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","description":"game_helpers.GameLogic.tmpMove","location":"-k-c-l--chess/game_helpers/-game-logic/tmp-move.html","searchKeys":["tmpMove","fun tmpMove(chessMove: ChessMove, chessBoard: ChessBoard, turn: Turn): Boolean","game_helpers.GameLogic.tmpMove"]},{"name":"fun trace(message: String)","description":"run.Logger.trace","location":"-k-c-l--chess/run/-logger/trace.html","searchKeys":["trace","fun trace(message: String)","run.Logger.trace"]},{"name":"fun value(): Pair<Int, Int>","description":"game_helpers.Location.value","location":"-k-c-l--chess/game_helpers/-location/value.html","searchKeys":["value","fun value(): Pair<Int, Int>","game_helpers.Location.value"]},{"name":"fun valueOf(value: String): Color","description":"pieces.Color.valueOf","location":"-k-c-l--chess/pieces/-color/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Color","pieces.Color.valueOf"]},{"name":"fun valueOf(value: String): PieceType","description":"pieces.PieceType.valueOf","location":"-k-c-l--chess/pieces/-piece-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PieceType","pieces.PieceType.valueOf"]},{"name":"fun values(): Array<Color>","description":"pieces.Color.values","location":"-k-c-l--chess/pieces/-color/values.html","searchKeys":["values","fun values(): Array<Color>","pieces.Color.values"]},{"name":"fun values(): Array<PieceType>","description":"pieces.PieceType.values","location":"-k-c-l--chess/pieces/-piece-type/values.html","searchKeys":["values","fun values(): Array<PieceType>","pieces.PieceType.values"]},{"name":"fun verifyInput(input: String): Boolean","description":"pieces.ChessPiece.verifyInput","location":"-k-c-l--chess/pieces/-chess-piece/verify-input.html","searchKeys":["verifyInput","fun verifyInput(input: String): Boolean","pieces.ChessPiece.verifyInput"]},{"name":"fun verifyInput(s: String): Boolean","description":"run.Run.verifyInput","location":"-k-c-l--chess/run/-run/verify-input.html","searchKeys":["verifyInput","fun verifyInput(s: String): Boolean","run.Run.verifyInput"]},{"name":"fun warn(message: String)","description":"run.Logger.warn","location":"-k-c-l--chess/run/-logger/warn.html","searchKeys":["warn","fun warn(message: String)","run.Logger.warn"]},{"name":"object Companion","description":"game_helpers.ChessBoard.Companion","location":"-k-c-l--chess/game_helpers/-chess-board/-companion/index.html","searchKeys":["Companion","object Companion","game_helpers.ChessBoard.Companion"]},{"name":"object Companion","description":"pieces.Bishop.Companion","location":"-k-c-l--chess/pieces/-bishop/-companion/index.html","searchKeys":["Companion","object Companion","pieces.Bishop.Companion"]},{"name":"object Companion","description":"pieces.EmptySpot.Companion","location":"-k-c-l--chess/pieces/-empty-spot/-companion/index.html","searchKeys":["Companion","object Companion","pieces.EmptySpot.Companion"]},{"name":"object Companion","description":"pieces.King.Companion","location":"-k-c-l--chess/pieces/-king/-companion/index.html","searchKeys":["Companion","object Companion","pieces.King.Companion"]},{"name":"object Companion","description":"pieces.Knight.Companion","location":"-k-c-l--chess/pieces/-knight/-companion/index.html","searchKeys":["Companion","object Companion","pieces.Knight.Companion"]},{"name":"object Companion","description":"pieces.Pawn.Companion","location":"-k-c-l--chess/pieces/-pawn/-companion/index.html","searchKeys":["Companion","object Companion","pieces.Pawn.Companion"]},{"name":"object Companion","description":"pieces.Queen.Companion","location":"-k-c-l--chess/pieces/-queen/-companion/index.html","searchKeys":["Companion","object Companion","pieces.Queen.Companion"]},{"name":"object Companion","description":"pieces.Rook.Companion","location":"-k-c-l--chess/pieces/-rook/-companion/index.html","searchKeys":["Companion","object Companion","pieces.Rook.Companion"]},{"name":"object Companion","description":"run.Logger.Companion","location":"-k-c-l--chess/run/-logger/-companion/index.html","searchKeys":["Companion","object Companion","run.Logger.Companion"]},{"name":"object Companion","description":"run.Run.Companion","location":"-k-c-l--chess/run/-run/-companion/index.html","searchKeys":["Companion","object Companion","run.Run.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"game_helpers.Location.equals","location":"-k-c-l--chess/game_helpers/-location/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","game_helpers.Location.equals"]},{"name":"open override fun hashCode(): Int","description":"game_helpers.Location.hashCode","location":"-k-c-l--chess/game_helpers/-location/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","game_helpers.Location.hashCode"]},{"name":"open override fun print(): String","description":"pieces.Bishop.print","location":"-k-c-l--chess/pieces/-bishop/print.html","searchKeys":["print","open override fun print(): String","pieces.Bishop.print"]},{"name":"open override fun print(): String","description":"pieces.EmptySpot.print","location":"-k-c-l--chess/pieces/-empty-spot/print.html","searchKeys":["print","open override fun print(): String","pieces.EmptySpot.print"]},{"name":"open override fun print(): String","description":"pieces.King.print","location":"-k-c-l--chess/pieces/-king/print.html","searchKeys":["print","open override fun print(): String","pieces.King.print"]},{"name":"open override fun print(): String","description":"pieces.Knight.print","location":"-k-c-l--chess/pieces/-knight/print.html","searchKeys":["print","open override fun print(): String","pieces.Knight.print"]},{"name":"open override fun print(): String","description":"pieces.Pawn.print","location":"-k-c-l--chess/pieces/-pawn/print.html","searchKeys":["print","open override fun print(): String","pieces.Pawn.print"]},{"name":"open override fun print(): String","description":"pieces.Queen.print","location":"-k-c-l--chess/pieces/-queen/print.html","searchKeys":["print","open override fun print(): String","pieces.Queen.print"]},{"name":"open override fun print(): String","description":"pieces.Rook.print","location":"-k-c-l--chess/pieces/-rook/print.html","searchKeys":["print","open override fun print(): String","pieces.Rook.print"]},{"name":"operator fun plus(direction: Location): Location","description":"game_helpers.Location.plus","location":"-k-c-l--chess/game_helpers/-location/plus.html","searchKeys":["plus","operator fun plus(direction: Location): Location","game_helpers.Location.plus"]},{"name":"var canBeEnPassant: Boolean = false","description":"pieces.Pawn.canBeEnPassant","location":"-k-c-l--chess/pieces/-pawn/can-be-en-passant.html","searchKeys":["canBeEnPassant","var canBeEnPassant: Boolean = false","pieces.Pawn.canBeEnPassant"]},{"name":"var color: Color","description":"pieces.ChessPiece.color","location":"-k-c-l--chess/pieces/-chess-piece/color.html","searchKeys":["color","var color: Color","pieces.ChessPiece.color"]},{"name":"var pieceType: PieceType","description":"pieces.ChessPiece.pieceType","location":"-k-c-l--chess/pieces/-chess-piece/piece-type.html","searchKeys":["pieceType","var pieceType: PieceType","pieces.ChessPiece.pieceType"]}]
